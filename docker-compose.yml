version: '3.8'

services:
  spring-boot-app:
    container_name: roamgram
    image: ${DOCKER_USERNAME}/roamgram:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_URL: ${POSTGRES_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_REGION: ${AWS_REGION}
      AWS_EC2_URI: ${AWS_EC2_URI}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      JWT_KEY: ${JWT_KEY}
    volumes:
      - h2-data:/app/h2-data
    networks:
      - my-network
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - my-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"
    container_name: redis
    networks:
      - my-network
    ports:
      - "6379:6379"
    expose:
      - "6379"

#  jenkins:
#    image: jenkins/jenkins:lts
#    container_name: jenkins
#    ports:
#      - "8081:8080"
#      - "50000:50000"
#    volumes:
#      - jenkins_home:/var/jenkins_home
#    networks:
#      - my-network
#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#    ports:
#      - "9200:9200"
#    networks:
#      - my-network
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.17.9
#    container_name: kibana
#    ports:
#      - "5601:5601"
#    networks:
#      - my-network
#    depends_on:
#      - elasticsearch
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.17.9
#    container_name: logstash
#    ports:
#      - "5044:5044"
#    volumes:
#      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
#    networks:
#      - my-network
#    depends_on:
#      - elasticsearch
#
#  nginx:
#    image: nginx:latest
#    container_name: nginx
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#      - /etc/letsencrypt:/etc/letsencrypt
#    networks:
#      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  h2-data:
  postgres_data:
#  jenkins_home:
