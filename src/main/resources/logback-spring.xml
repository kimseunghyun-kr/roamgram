<configuration>
    <!-- Include Spring Boot default configurations for console logging -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

    <!-- Define properties for log file paths and names -->
    <springProperty scope="context" name="LOG_PATH" source="logging.file.path"/>
    <property name="LOG_FILE_NAME" value="api"/>
    <property name="ERR_LOG_FILE_NAME" value="api-error"/>

    <!-- Root logger configuration for console output -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
    </root>
    <!-- Logger for Spring web with DEBUG level -->
    <logger name="org.springframework.web" level="DEBUG"/>

    <appender name="FILEBEAT" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <destination>filebeat:5044</destination>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
    </appender>

    <!-- API 로깅 -->
    <appender name="ApiLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
        </encoder>
        <!-- 하루에 한번 압축 후 보관, 최대 3일, 100MB까지 보관 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>3</maxHistory>
            <totalSizeCap>100MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 오류 로깅 -->
    <appender name="ErrorLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
        </encoder>
        <!-- 하루에 한번 압축 후 보관, 최대 3일, 100MB까지 보관 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE_NAME}.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>3</maxHistory>
            <totalSizeCap>100MB</totalSizeCap>
        </rollingPolicy>
    </appender>

<!--prod 환경에서만 파일 저장된 로그 가져오기-->
    <springProfile name="prod">
        <logger name="com.roamgram.traveldiary.logging.loggingAspect" level="INFO">
            <appender-ref ref="ApiLogFile" />
            <appender-ref ref="ErrorLogFile" />
            <appender-ref ref="FILEBEAT"/>
        </logger>

        <appender-ref ref="LOGSTASH"/>
    </springProfile>

</configuration>